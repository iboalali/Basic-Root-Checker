plugins {
    alias(libs.plugins.androidApplication)
}

// Function to read the app name from strings.xml
def getAppNameFromStrings() {
    def stringsFile = file("src/main/res/values/strings.xml")
    def xml = new XmlSlurper().parse(stringsFile)
    return xml.string.find { it.'@name' == 'base_app_name' }.text()
}

def baseAppName = getAppNameFromStrings()

android {
    namespace 'com.iboalali.basicrootchecker'
    defaultConfig {
        applicationId "com.iboalali.basicrootchecker"
        minSdkVersion 21
        targetSdkVersion 36
        compileSdk 36
        setBuildToolsVersion "36.0.0"
        versionCode 28
        versionName "v1.12vc" + getVersionCode()
        vectorDrawables.useSupportLibrary = true
        resourceConfigurations += ['en', 'ar', 'de']
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", baseAppName + " (Beta)"
            versionNameSuffix " (Beta)"
        }
    }

    buildFeatures {
        dataBinding true
        buildConfig = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

dependencies {
    implementation libs.core
    implementation libs.core.splashscreen
    implementation libs.activity
    implementation libs.appcompat
    implementation libs.material
    implementation libs.android.device.names
    implementation libs.constraintlayout
    implementation libs.annotation

    // The core module is used by all other components
    implementation libs.libsu.core
}
